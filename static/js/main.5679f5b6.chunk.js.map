{"version":3,"sources":["components/Header/Header.js","components/Kegs/Keg.js","components/Kegs/KegList.js","components/Kegs/KegForm.js","components/Kegs/NewKegForm.js","components/Kegs/KegDetails.js","components/Kegs/EditKegForm.js","actions/ActionTypes.js","actions/index.js","components/Kegs/KegContent.js","components/App.js","reportWebVitals.js","reducers/keg-list-reducer.js","reducers/select-keg-reducer.js","reducers/form-visible-reducer.js","reducers/index.js","index.js"],"names":["Header","Fragment","class","Keg","props","onClick","onItemClick","id","brand","name","price","KegList","ListGroup","Object","values","items","map","item","Item","Container","Row","Col","kegSelectHandler","xs","className","pintsLeft","Button","title","onSellPint","onClickEdit","KegForm","Form","onSubmit","onClickHandler","Group","controlId","Label","Control","type","buttonText","NewKegForm","event","preventDefault","target","formKegName","value","formKegBrand","alcoholContent","formAlcoholContent","formPintPrice","formNumberOfPints","v4","KegDetails","keg","EditKegForm","onSave","ADD_KEG","DELETE_KEG","CHANGE_KEG_SELECT","CLEAR_KEG_SELECT","SHOW_NEW_FORM","HIDE_NEW_FORM","TOGGLE_NEW_FORM","SHOW_EDIT_FORM","HIDE_EDIT_FORM","TOGGLE_EDIT_FORM","addNewKeg","c","selectKeg","clearKegSelect","hideNewForm","toggleNewForm","showEditForm","hideEditForm","KegContent","onButtonClickHandler","dispatch","keys","selectedKeg","length","action","onSubmitNewKegHandler","onKegSelect","kegList","onDecreasePintsHandler","kegSelected","onSaveKegEditHandler","onEditKegClickHandler","visibleContent","this","formVisible","edit","new","React","Component","connect","state","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","kegListReducer","assign","newState","selectKegReducer","formVisibleReducer","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5679f5b6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <h1 class=\"header\">Tap Room</h1>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Keg = (props) => {\n  return (\n    <React.Fragment>\n      <div onClick={() => props.onItemClick(props.id)}>\n        <p>\n          {props.brand} {props.name} - ${props.price}\n        </p>\n      </div>\n    </React.Fragment>\n  );\n};\n\nKeg.propTypes = {\n  name: PropTypes.string.isRequired,\n  brand: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  id: PropTypes.string,\n  onItemClick: PropTypes.func,\n};\n\nexport default Keg;\n","import React from \"react\";\r\nimport Keg from \"./Keg\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { FaBeer, FaMinus, FaEdit } from \"react-icons/fa\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst KegList = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <ListGroup>\r\n        {Object.values(props.items).map((item) => (\r\n          <ListGroup.Item key={item.id}>\r\n            <Container>\r\n              <Row>\r\n                <Col>\r\n                  <Keg\r\n                    name={item.name}\r\n                    brand={item.brand}\r\n                    price={item.price}\r\n                    id={item.id}\r\n                    key={item.id}\r\n                    onItemClick={props.kegSelectHandler}\r\n                  />\r\n                </Col>\r\n                <Col xs={3}>\r\n                  <p className=\"float-right\">\r\n                    Pints Available: {item.pintsLeft}{\" \"}\r\n                  </p>\r\n                </Col>\r\n                <Col xs={2}>\r\n                  <Button\r\n                    title=\"Sell a Pint\"\r\n                    onClick={() => props.onSellPint(item.id)}\r\n                    className=\"float-right\"\r\n                  >\r\n                    <FaMinus />\r\n                    <FaBeer />\r\n                  </Button>\r\n                </Col>\r\n                <Col xs={2}>\r\n                  <Button\r\n                    title=\"Edit Information\"\r\n                    onClick={() => props.onClickEdit(item.id)}\r\n                    className=\"float-right\"\r\n                  >\r\n                    <FaEdit />\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nKegList.propTypes = {\r\n  items: PropTypes.array,\r\n  kegSelectHandler: PropTypes.func,\r\n  onSellPint: PropTypes.func,\r\n  onClickEdit: PropTypes.func,\r\n};\r\n\r\nexport default KegList;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst KegForm = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Form onSubmit={props.onClickHandler}>\r\n        <Form.Group controlId=\"formKegName\">\r\n          <Form.Label class=\"form-label\">Name</Form.Label>\r\n          <Form.Control type=\"text\" class=\"form-input form-control\" />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formKegBrand\">\r\n          <Form.Label class=\"form-label\">Brand</Form.Label>\r\n          <Form.Control type=\"text\" class=\"form-input form-control\" />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formAlcoholContent\">\r\n          <Form.Label class=\"form-label\">Alcohol Content</Form.Label>\r\n          <Form.Control type=\"text\" class=\"form-input form-control\" />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formPintPrice\">\r\n          <Form.Label class=\"form-label\">Price Per Pint</Form.Label>\r\n          <Form.Control type=\"text\" class=\"form-input form-control\" />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formNumberOfPints\">\r\n          <Form.Label class=\"form-label\">Pints In Keg</Form.Label>\r\n          <Form.Control type=\"text\" class=\"form-input form-control\" />\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\">{props.buttonText}</Button>\r\n      </Form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nKegForm.propTypes = {\r\n  onClickHandler: PropTypes.func,\r\n  buttonText: PropTypes.string,\r\n};\r\n\r\nexport default KegForm;\r\n","import React from \"react\";\r\nimport { v4 } from \"uuid\";\r\nimport KegForm from \"./KegForm\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst NewKegForm = (props) => {\r\n  function newKegSubmitHandler(event) {\r\n    event.preventDefault();\r\n    props.onSubmit({\r\n      name: event.target.formKegName.value,\r\n      brand: event.target.formKegBrand.value,\r\n      alcoholContent: event.target.formAlcoholContent.value,\r\n      price: event.target.formPintPrice.value,\r\n      pintsLeft: event.target.formNumberOfPints.value,\r\n      id: v4(),\r\n    });\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <KegForm buttonText=\"Submit\" onClickHandler={newKegSubmitHandler} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nNewKegForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default NewKegForm;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst KegDetails = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <h2>\r\n        {props.keg.brand} {props.keg.name}\r\n      </h2>\r\n      <p>Alcohol Content: {props.keg.alcoholContent}%</p>\r\n      <p>Price: ${props.keg.price}</p>\r\n      <p>Pints in Keg: {props.keg.pintsLeft}</p>\r\n      <Button onClick={() => props.onSellPint(props.keg.id)} className=\"m-2\">\r\n        Sell a Pint\r\n      </Button>\r\n      <Button onClick={() => props.onClickEdit(props.keg.id)} className=\"m-2\">\r\n        Edit Keg Information\r\n      </Button>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nKegDetails.propTypes = {\r\n  keg: PropTypes.object,\r\n  onSellPint: PropTypes.func,\r\n  onClickEdit: PropTypes.func,\r\n};\r\n\r\nexport default KegDetails;\r\n","import React from \"react\";\nimport KegForm from \"./KegForm\";\nimport PropTypes from \"prop-types\";\n\nconst EditKegForm = (props) => {\n  function editKegHandler(event) {\n    event.preventDefault();\n    props.onSave({\n      name: event.target.formKegName.value,\n      brand: event.target.formKegBrand.value,\n      alcoholContent: event.target.formAlcoholContent.value,\n      price: event.target.formPintPrice.value,\n      pintsLeft: event.target.formNumberOfPints.value,\n      id: props.keg.id,\n    });\n  }\n  return (\n    <React.Fragment>\n      <KegForm buttonText=\"Save Changes\" onClickHandler={editKegHandler} />\n    </React.Fragment>\n  );\n};\n\nEditKegForm.propTypes = {\n  keg: PropTypes.object,\n  editKegHandler: PropTypes.func,\n};\n\nexport default EditKegForm;\n","export const ADD_KEG = \"ADD_KEG\";\nexport const DELETE_KEG = \"DELETE_KEG\";\nexport const CHANGE_KEG_SELECT = \"CHANGE_KEG_SELECT\";\nexport const CLEAR_KEG_SELECT = \"CLEAR_KEG_SELECT\";\nexport const SHOW_NEW_FORM = \"SHOW_NEW_FORM\";\nexport const HIDE_NEW_FORM = \"HIDE_NEW_FORM\";\nexport const TOGGLE_NEW_FORM = \"TOGGLE_NEW_FORM\";\nexport const SHOW_EDIT_FORM = \"SHOW_EDIT_FORM\";\nexport const HIDE_EDIT_FORM = \"HIDE_EDIT_FORM\";\nexport const TOGGLE_EDIT_FORM = \"TOGGLE_EDIT_FORM\";\n","import * as c from \"./ActionTypes\";\n\nexport const addNewKeg = (keg) => ({\n  type: c.ADD_KEG,\n  ...keg,\n});\n\nexport const deleteKeg = (id) => ({\n  type: c.DELETE_KEG,\n  id: id,\n});\n\nexport const selectKeg = (keg) => ({\n  type: c.CHANGE_KEG_SELECT,\n  ...keg,\n});\n\nexport const clearKegSelect = (keg) => ({\n  type: c.CLEAR_KEG_SELECT,\n});\n\nexport const showNewForm = () => ({\n  type: c.SHOW_NEW_FORM,\n});\n\nexport const hideNewForm = () => ({\n  type: c.HIDE_NEW_FORM,\n});\n\nexport const toggleNewForm = () => ({\n  type: c.TOGGLE_NEW_FORM,\n});\n\nexport const showEditForm = () => ({\n  type: c.SHOW_EDIT_FORM,\n});\n\nexport const hideEditForm = () => ({\n  type: c.HIDE_EDIT_FORM,\n});\n\nexport const toggleEditForm = () => ({\n  type: c.TOGGLE_EDIT_FORM,\n});\n","import React from \"react\";\r\nimport KegList from \"./KegList\";\r\nimport NewKegForm from \"./NewKegForm\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport KegDetails from \"./KegDetails\";\r\nimport EditKegForm from \"./EditKegForm\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as action from \"../../actions\";\r\nimport \"./KegContent.scss\";\r\n\r\nclass KegContent extends React.Component {\r\n  onButtonClickHandler = () => {\r\n    const { dispatch } = this.props;\r\n    if (Object.keys(this.props.selectedKeg).length) {\r\n      dispatch(action.hideNewForm());\r\n      dispatch(action.hideEditForm());\r\n      dispatch(action.clearKegSelect());\r\n    } else {\r\n      dispatch(action.toggleNewForm());\r\n    }\r\n  };\r\n\r\n  onSubmitNewKegHandler = (keg) => {\r\n    const { dispatch } = this.props;\r\n    dispatch(action.addNewKeg(keg));\r\n    dispatch(action.hideNewForm());\r\n  };\r\n\r\n  onKegSelect = (id) => {\r\n    const { dispatch } = this.props;\r\n    const keg = this.props.kegList[id];\r\n    dispatch(action.selectKeg(keg));\r\n  };\r\n\r\n  onDecreasePintsHandler = (id) => {\r\n    const { dispatch } = this.props;\r\n    const kegSelected = this.props.kegList[id];\r\n    kegSelected.pintsLeft--;\r\n    if (kegSelected.pintsLeft < 0) {\r\n      kegSelected.pintsLeft = 0;\r\n    }\r\n    dispatch(action.addNewKeg(kegSelected));\r\n    if (Object.keys(this.props.selectedKeg).length) {\r\n      dispatch(action.selectKeg(kegSelected));\r\n    }\r\n  };\r\n\r\n  onSaveKegEditHandler = (keg) => {\r\n    const { dispatch } = this.props;\r\n    dispatch(action.addNewKeg(keg));\r\n    dispatch(action.hideNewForm());\r\n    dispatch(action.hideEditForm());\r\n    dispatch(action.selectKeg(keg));\r\n  };\r\n\r\n  onEditKegClickHandler = (id) => {\r\n    const { dispatch } = this.props;\r\n    const kegSelected = this.props.kegList[id];\r\n    dispatch(action.showEditForm());\r\n    dispatch(action.selectKeg(kegSelected));\r\n  };\r\n\r\n  render() {\r\n    let visibleContent = null;\r\n    let buttonText = \"Return to Keg List\";\r\n    if (this.props.formVisible.edit) {\r\n      visibleContent = (\r\n        <EditKegForm\r\n          keg={this.props.selectedKeg}\r\n          onSave={this.onSaveKegEditHandler}\r\n        />\r\n      );\r\n    } else if (Object.keys(this.props.selectedKeg).length) {\r\n      visibleContent = (\r\n        <KegDetails\r\n          keg={this.props.selectedKeg}\r\n          onSellPint={this.onDecreasePintsHandler}\r\n          onClickEdit={this.onEditKegClickHandler}\r\n        />\r\n      );\r\n    } else if (this.props.formVisible.new) {\r\n      visibleContent = <NewKegForm onSubmit={this.onSubmitNewKegHandler} />;\r\n    } else {\r\n      visibleContent = (\r\n        <KegList\r\n          items={this.props.kegList}\r\n          kegSelectHandler={this.onKegSelect}\r\n          onSellPint={this.onDecreasePintsHandler}\r\n          onClickEdit={this.onEditKegClickHandler}\r\n        />\r\n      );\r\n      buttonText = \"Add New Keg\";\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <Container id=\"content-container\">\r\n          {visibleContent}\r\n          <div class=\"text-center m-2\">\r\n            <Button onClick={this.onButtonClickHandler}>{buttonText}</Button>\r\n          </div>\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    kegList: state.kegList,\r\n    selectedKeg: state.selectedKeg,\r\n    formVisible: state.formVisible,\r\n  };\r\n};\r\n\r\nKegContent.propTypes = {\r\n  kegList: PropTypes.object,\r\n  selectedKeg: PropTypes.object,\r\n  formVisible: PropTypes.object,\r\n};\r\n\r\nKegContent = connect(mapStateToProps)(KegContent);\r\n\r\nexport default KegContent;\r\n","import \"./App.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./Header/Header\";\nimport KegContent from \"./Kegs/KegContent\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <KegContent />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as c from \"../actions/ActionTypes\";\n\nconst kegListReducer = (state = {}, action) => {\n  const { name, brand, alcoholContent, price, pintsLeft, id } = action;\n  switch (action.type) {\n    case c.ADD_KEG:\n      return Object.assign({}, state, {\n        [id]: {\n          name: name,\n          brand: brand,\n          alcoholContent: alcoholContent,\n          price: price,\n          pintsLeft: pintsLeft,\n          id: id,\n        },\n      });\n    case c.DELETE_KEG:\n      let newState = { ...state };\n      delete newState[id];\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default kegListReducer;\n","import * as c from \"../actions/ActionTypes\";\n\nconst selectKegReducer = (state = {}, action) => {\n  const { name, brand, alcoholContent, price, pintsLeft, id } = action;\n  let newState;\n  switch (action.type) {\n    case c.CHANGE_KEG_SELECT:\n      newState = {\n        name: name,\n        brand: brand,\n        alcoholContent: alcoholContent,\n        price: price,\n        pintsLeft: pintsLeft,\n        id: id,\n      };\n      return newState;\n    case c.CLEAR_KEG_SELECT:\n      newState = {};\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default selectKegReducer;\n","import * as c from \"../actions/ActionTypes\";\n\nconst formVisibleReducer = (state = {}, action) => {\n  let newState;\n  switch (action.type) {\n    case c.SHOW_NEW_FORM:\n      newState = { ...state };\n      newState.new = true;\n      return newState;\n    case c.HIDE_NEW_FORM:\n      newState = { ...state };\n      newState.new = false;\n      return newState;\n    case c.TOGGLE_NEW_FORM:\n      newState = { ...state };\n      newState.new = !state.new;\n      return newState;\n    case c.SHOW_EDIT_FORM:\n      newState = { ...state };\n      newState.edit = true;\n      return newState;\n    case c.HIDE_EDIT_FORM:\n      newState = { ...state };\n      newState.edit = false;\n      return newState;\n    case c.TOGGLE_EDIT_FORM:\n      newState = { ...state };\n      newState.edit = !state.new;\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default formVisibleReducer;\n","import kegListReducer from \"./keg-list-reducer\";\nimport selectKegReducer from \"./select-keg-reducer\";\nimport formVisibleReducer from \"./form-visible-reducer\";\nimport { combineReducers } from \"redux\";\n\nconst rootReducer = combineReducers({\n  kegList: kegListReducer,\n  selectedKeg: selectKegReducer,\n  formVisible: formVisibleReducer,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport rootReducer from \"./reducers/index\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}